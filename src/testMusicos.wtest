import luisAlberto.*
import fender.*
import gibson.*
import Cancion.*
import Presentacion.*
import lunaPark.*
import laTrastienda.*
import pimpinela.*
import DeGrupo.*
import VocalistaPopular.*
import Grupo.*
import Album.*

describe "tests para los musicos" {
	var kike = new DeGrupo(60, [ ], 20)
	var soledad = new VocalistaPopular(55, [ ], "amor")

	var joaquin = new DeGrupo(20, [ ], 5)
	var lucia = new VocalistaPopular(70, [ ], "familia")
	var pimpinela = new Grupo()

	var cancionLaFamilia = new Cancion()
	var cancionCisne = new Cancion()
	var cancionEres = new Cancion()
	var cancionCorazonAmericano = new Cancion()
	var cancionAlmaDeDiamante = new Cancion()
	var cancionCrisantemo = new Cancion()
	
	var especialLaFamilia = new Album()
	var laSole = new Album()
	var paraLosArboles = new Album()
	var justCrisantemo = new Album()
	
	fixture {
		pimpinela.agregarIntegrante(lucia)
		lucia.grupo(pimpinela)

		pimpinela.agregarIntegrante(joaquin)
		joaquin.grupo(pimpinela)
		joaquin.agregarAlbum(especialLaFamilia)

		soledad.agregarAlbum(laSole)
		
		luisAlberto.agregarAlbum(paraLosArboles)
		luisAlberto.agregarAlbum(justCrisantemo)
	}

	method cancionLaFamilia() {
		cancionLaFamilia.duracion(264)
		cancionLaFamilia.letra("Quiero brindar por mi gente sencilla, por el amor brindo por la familia")
		return cancionLaFamilia
	}

	method cancionElCisne() {
		cancionCisne.duracion(312)
		cancionCisne.letra("Hoy el viento se abrio quedo vacio el aire una vez mas y el manantial broto y nadie esta aqui
		 y puedo ver que solo estallan las hojas al brillar")
		return cancionCisne
	}

	method cancionEres() {
		cancionEres.duracion(145)
		cancionEres.letra("Eres lo mejor que me paso en la vida, no tengo duad, no habras mas nada despues de ti. Eres lo que le dio brillo al dia a dia, y asi sera por siempre, no cambiara, hasta el final de mis dias")
		return cancionEres
	}

	method cancionCorazonAmericano() {
		cancionCorazonAmericano.duracion(154)
		cancionCorazonAmericano.letra("Canta corazon, canta mas alto, que tu pena al fin se va marchando, el nuevo milenio ha de encontrarnos, junto corazon, como soniamos")
		return cancionCorazonAmericano
	}
	
	method cancionAlmaDeDiamante() {
		cancionAlmaDeDiamante.duracion(216)
		cancionAlmaDeDiamante.letra("Ven a mi con tu dulce alma de diamante. Y aunque el sol se nuble despues sos alma de diamante. Cielo o piel silencio o verdad sos alma de diamante. Por eso ven asi con la humanidad alma de diamante")
		return cancionAlmaDeDiamante		
	}
	
	method cancionCrisantemo(){
		cancionCrisantemo.duracion(175)
		cancionCrisantemo.letra("Tocame junto a esta pared, yo quede por aqui... cuando no hubo mas luz... quiero mirar a traves de mi piel... Crisantemo, que se abrio... encuentra el camino hacia el cielo")
		return cancionCrisantemo
	}

	method especialLaFamilia() {
		especialLaFamilia.fechaLanzamiento(new Date(17, 06, 1992))
		especialLaFamilia.vendidos(89000)
		especialLaFamilia.salieron(100000)
		especialLaFamilia.agregarCancion(cancionLaFamilia)
		return especialLaFamilia
	}

	method laSole() {
		laSole.fechaLanzamiento(new Date(04, 02, 2005))
		laSole.vendidos(130000)
		laSole.salieron(200000)
		laSole.agregarCancion(cancionEres)
		laSole.agregarCancion(cancionCorazonAmericano)
		return laSole
	}
	
	method paraLosArboles(){
		paraLosArboles.fechaLanzamiento(new Date(31, 03, 2003))
		paraLosArboles.vendidos(49000)
		paraLosArboles.salieron(50000)
		paraLosArboles.agregarCancion(cancionCisne)
		paraLosArboles.agregarCancion(cancionAlmaDeDiamante)
		return paraLosArboles
	}
	
	method justCrisantemo(){
		justCrisantemo.fechaLanzamiento(new Date(05, 12, 2007))
		justCrisantemo.vendidos(27500)
		justCrisantemo.salieron(28000)
		justCrisantemo.agregarCancion(cancionCrisantemo)
		return justCrisantemo
	}

	test "Joaquin del grupo pimpinela tiene una habilidad de 25" {

		assert.equals(25, joaquin.habilidad())
	}

	test "Joaquin abandona pimpinela por lo que tiene una habilidad de 20" {

		joaquin.abandonarGrupo()
		pimpinela.eliminarIntegrante(joaquin)

		assert.that(joaquin.esSolista())
		assert.equals(20, joaquin.habilidad())
	}

	test "Joaquin no interpreta bien la cancion 'la familia'" {
		self.cancionLaFamilia()
		assert.notThat(joaquin.interpretaBien(cancionLaFamilia))

	}

	test "Joaquin si interpreta bien la cancion 'cisne'" {
		self.cancionElCisne()
		assert.that(joaquin.interpretaBien(cancionCisne))
	}

	test "Lucia canta en el grupo pimpinela y tiene una habilidad de 50" {

		assert.equals(50, lucia.habilidad())
	}

	test "Lucia abandona pimpinela por lo que tiene una habilidad de 70" {

		lucia.abandonarGrupo()
		pimpinela.eliminarIntegrante(lucia)

		assert.that(lucia.esSolista())
		assert.equals(70, lucia.habilidad())
	}

	test "Lucia interpreta bien la cancion La Familia" {

		self.cancionLaFamilia()

		assert.that(lucia.interpretaBien(cancionLaFamilia))
	}

	test "Lucia no interpreta bien la cancion Cisne" {

		self.cancionElCisne()

		assert.notThat(lucia.interpretaBien(cancionCisne))
	}

	test "luis alberto toca con una fender, su habilidad es de 100" {

		luisAlberto.guitarra(fender)
		assert.equals(80, luisAlberto.habilidad())

	}

	test "luis alberto toca con la gison sana y su habilidad es 100" {

		luisAlberto.guitarra(gibson)
		assert.equals(100, luisAlberto.habilidad())

	}

	test "luis alberto toca con la gibson rota y su habilidad es 40" {
		gibson.tratarMal()
		luisAlberto.guitarra(gibson)
		assert.equals(40, luisAlberto.habilidad())
	}

	test "Luis Alberto si interpreta bien la cancion La Familia" {

		self.cancionLaFamilia()
		assert.that(luisAlberto.interpretaBien(cancionLaFamilia))
	}

	test "Luis Alberto si interpreta bien la cancion Cisne" {
		self.cancionElCisne()
		assert.that(luisAlberto.interpretaBien(cancionCisne))
	}

	/* 	test "Saber si soledad es minimalista"{
		
		asert
		
	}*/
}