import luisAlberto.*
import fender.*
import gibson.*
import Cancion.*
import Presentacion.*
import lunaPark.*
import laTrastienda.*
import pimpinela.*
import DeGrupo.*
import VocalistaPopular.*
import Grupo.*

describe "tests para joaquin" {
	var joaquin = new DeGrupo(20, [ ], 5)
	var pimpinela = new Grupo()
	var cancionLaFamilia = new Cancion()
	var cancionCisne = new Cancion()
	
	fixture {
		pimpinela.agregarIntegrante(joaquin)
		joaquin.grupo(pimpinela)
	}

	method cancionLaFamilia() {
		cancionLaFamilia.duracion(264)
		cancionLaFamilia.letra("Quiero brindar por mi gente sencilla, por el amor brindo por la familia")
		return cancionLaFamilia
	}
	
	method cancionElCisne() {
		cancionCisne.duracion(312)
		cancionCisne.letra("Hoy el viento se abrio quedo vacio el aire una vez mas y el manantial broto y nadie esta aqui
		 y puedo ver que solo estallan las hojas al brillar")
		return cancionCisne
	}
	
	test "Joaquin del grupo pimpinela tiene una habilidad de 25" {

		assert.equals(25, joaquin.habilidad())
	}

	test "Joaquin abandona pimpinela por lo que tiene una habilidad de 20" {

		joaquin.abandonarGrupo()
		pimpinela.eliminarIntegrante(joaquin)

		assert.that(joaquin.esSolista())
		assert.equals(20, joaquin.habilidad())
	}

	test "Joaquin no interpreta bien la cancion 'la familia'" {

		assert.notThat(joaquin.interpretaBien(cancionLaFamilia))

	}

	test "Joaquin si interpreta bien la cancion 'cisne'" {

		assert.that(joaquin.interpretaBien(cancionCisne))
	}

}

/*  describe "tests para lucia" { var lucia = new VocalistaPopular ( 70 , [ ] ,
"familia" ) test
"Lucia canta en el grupo pimpinela y tiene una habilidad de 50" { pimpinela .
agregarIntegrante ( lucia ) lucia . grupo ( pimpinela ) assert . equals ( 50 ,
lucia . habilidad ( ) ) } } * /
/*

test "Lucia abandona pimpinela por lo que tiene una habilidad de 70" {

	pimpinela.agregarIntegrante(lucia)
	lucia.grupo(pimpinela)

	lucia.serSolista()
	assert.equals(70, lucia.habilidad())
}

test "luis alberto toca con una fender, su habilidad es de 100" {

	luisAlberto.guitarra(fender)
	assert.equals(80, luisAlberto.habilidad())

}

test "luis alberto toca con la gison sana y su habilidad es 100" {

	luisAlberto.guitarra(gibson)
	assert.equals(100, luisAlberto.habilidad())

}

test "luis alberto toca con la gibson rota y su habilidad es 40" {
	gibson.tratarMal()
	luisAlberto.guitarra(gibson)
	assert.equals(40, luisAlberto.habilidad())
}



test "Lucia interpreta bien la cancion La Familia" {
	var cancionLaFamilia = init.cancionLaFamilia()
	assert.that(lucia.interpretaBien(cancionLaFamilia))
}

test "Lucia no interpreta bien la cancion Cisne" {
	var cancionCisne = init.cancionCisne()
	assert.notThat(lucia.interpretaBien(cancionCisne))
}

test "Luis Alberto si interpreta bien la cancion La Familia" {
	var cancionLaFamilia = init.cancionLaFamilia()
	assert.that(luisAlberto.interpretaBien(cancionLaFamilia))
}

test "Luis Alberto si interpreta bien la cancion Cisne" {
	var cancionCisne = init.cancionCisne()
	assert.that(luisAlberto.interpretaBien(cancionCisne))
}

test "Joaquin cobra 50 por presentarse en el luna park" {

	var presentacionLuna = init.presentacionLunaPark()
	assert.equals(50, joaquin.costo(presentacionLuna))
}

test "Joaquin cobra 100 por presentarse solo en la trastienda" {

	var presentacionLaTrastienda = init.presentacionLaTrastienda()
	presentacionLaTrastienda.eliminarArtista(luisAlberto)
	presentacionLaTrastienda.eliminarArtista(lucia)

	assert.equals(100, joaquin.costo(presentacionLaTrastienda))
}

test "La capacidad de la trastienda para el 5 de agosto de 2017 es 700" {

	var fechaShow = new Date(05, 08, 2017)
	assert.equals(700, laTrastienda.capacidad(fechaShow))
}

test "La capacidad de la trastienda para el 8 de agosto de 2017 es 400" {

	var fechaShow = new Date(08, 08, 2017)
	assert.equals(400, laTrastienda.capacidad(fechaShow))
}

test "Lucia cobra 500 por presentarse en el luna park " {
	var presentacionLuna = init.presentacionLunaPark()
	assert.equals(500, lucia.costo(presentacionLuna))
}

test "Lucia cobra 400 por presentarse en la trastienda" {
	var presentacionLaTrastienda = init.presentacionLaTrastienda()
	assert.equals(400, lucia.costo(presentacionLaTrastienda))
}

test "luis alberto cobra 1000 por presentarse en el luna park" {
	var presentacionLuna = init.presentacionLunaPark()
	assert.equals(1000, luisAlberto.costo(presentacionLuna))
}

test "luis alberto cobra 1200 por presentarse en la trastienda" {
	var presentacionLaTrastienda = init.presentacionLaTrastienda()
	assert.equals(1200, luisAlberto.costo(presentacionLaTrastienda))
}

test "el costo de la presentacion del luna park es 1550"{
	var presentacionLuna = init.presentacionLunaPark()
	assert.equals(1550, presentacionLuna.costo())
}

test"el costo de la presentacion de la trastienda es 1650"{
	var presentacionLaTrastienda = init.presentacionLaTrastienda()
	assert.equals(1650, presentacionLaTrastienda.costo())
}


*/
